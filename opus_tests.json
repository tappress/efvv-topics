[
  {
    "id": 1,
    "question": "Які з наведених алгоритмів мають однакову асимптотичну складність O(n log n) у середньому випадку?",
    "options": [
      "Bubble Sort та Selection Sort",
      "Merge Sort та Heap Sort",
      "Insertion Sort та Quick Sort",
      "Shell Sort та Bubble Sort"
    ],
    "correct_answer": "Merge Sort та Heap Sort",
    "explanation": "Merge Sort та Heap Sort гарантовано мають складність O(n log n) у всіх випадках, що робить їх передбачуваними за продуктивністю.",
    "topic": "1.1.1"
  },
  {
    "id": 2,
    "question": "У якому випадку використання черги з пріоритетами є більш ефективним, ніж звичайної черги?",
    "options": [
      "Обробка запитів веб-сервера в порядку надходження",
      "Планування процесів в операційній системі за важливістю",
      "Реалізація історії команд в текстовому редакторі",
      "Зберігання послідовності кроків алгоритму"
    ],
    "correct_answer": "Планування процесів в операційній системі за важливістю",
    "explanation": "Черга з пріоритетами дозволяє обробляти елементи не в порядку надходження, а за їх пріоритетом, що критично для планувальників ОС.",
    "topic": "1.1.2"
  },
  {
    "id": 3,
    "question": "Який недолік має реалізація словника на основі несортованого масиву порівняно з хеш-таблицею?",
    "options": [
      "Більше споживання пам'яті",
      "Складність видалення O(n) замість O(1)",
      "Неможливість зберігати дублікати ключів",
      "Складність пошуку O(n) замість O(1)"
    ],
    "correct_answer": "Складність пошуку O(n) замість O(1)",
    "explanation": "У несортованому масиві пошук елемента вимагає перегляду всіх елементів (O(n)), тоді як хеш-таблиця забезпечує доступ за O(1) у середньому.",
    "topic": "1.1.3"
  },
  {
    "id": 4,
    "question": "Чому Shell Sort вважається удосконаленим варіантом сортування вставками?",
    "options": [
      "Використовує додаткову пам'ять для прискорення",
      "Сортує елементи на відстані, зменшуючи кількість переміщень",
      "Працює рекурсивно замість ітеративно",
      "Використовує випадкові числа для оптимізації"
    ],
    "correct_answer": "Сортує елементи на відстані, зменшуючи кількість переміщень",
    "explanation": "Shell Sort спочатку сортує елементи, що знаходяться на певній відстані один від одного, поступово зменшуючи цю відстань до 1.",
    "topic": "1.1.4"
  },
  {
    "id": 5,
    "question": "У чому полягає основна відмінність між алгоритмами Прима та Крускала для побудови мінімального кістякового дерева?",
    "options": [
      "Прим працює з вершинами, Крускал - з ребрами",
      "Прим швидший, Крускал - повільніший",
      "Прим для орієнтованих графів, Крускал - для неорієнтованих",
      "Прим використовує DFS, Крускал - BFS"
    ],
    "correct_answer": "Прим працює з вершинами, Крускал - з ребрами",
    "explanation": "Алгоритм Прима нарощує дерево від початкової вершини, а Крускал сортує всі ребра та додає їх, якщо вони не утворюють цикл.",
    "topic": "1.1.5"
  },
  {
    "id": 6,
    "question": "Який алгоритм НЕ базується на стратегії 'розділяй та володарюй'?",
    "options": [
      "Бінарний пошук",
      "Алгоритм Штрассена для множення матриць",
      "Динамічне програмування для чисел Фібоначчі",
      "Швидке перетворення Фур'є"
    ],
    "correct_answer": "Динамічне програмування для чисел Фібоначчі",
    "explanation": "Динамічне програмування зберігає результати підзадач для повторного використання, а не розділяє задачу на незалежні частини.",
    "topic": "1.2.1"
  },
  {
    "id": 7,
    "question": "В якій ситуації жадібний алгоритм НЕ дає оптимального розв'язку?",
    "options": [
      "Алгоритм Дійкстри для найкоротших шляхів",
      "Алгоритм Хаффмана для стиснення даних",
      "Задача про розмін монет для довільного набору номіналів",
      "Алгоритм Прима для мінімального кістякового дерева"
    ],
    "correct_answer": "Задача про розмін монет для довільного набору номіналів",
    "explanation": "Для довільних номіналів монет жадібний підхід може не дати мінімальної кількості монет (наприклад, для номіналів 1, 3, 4 і суми 6).",
    "topic": "1.2.2"
  },
  {
    "id": 8,
    "question": "Яка ключова властивість задачі дозволяє ефективно застосувати динамічне програмування?",
    "options": [
      "Наявність циклів у алгоритмі",
      "Можливість паралельного виконання",
      "Оптимальна підструктура та перекриваючі підзадачі",
      "Лінійна залежність від вхідних даних"
    ],
    "correct_answer": "Оптимальна підструктура та перекриваючі підзадачі",
    "explanation": "Динамічне програмування ефективне, коли оптимальний розв'язок містить оптимальні розв'язки підзадач, які повторюються.",
    "topic": "1.2.3"
  },
  {
    "id": 9,
    "question": "Яка теорема використовується для аналізу складності алгоритмів типу 'розділяй та володарюй'?",
    "options": [
      "Теорема Байєса",
      "Мастер-теорема (Master theorem)",
      "Теорема Кука",
      "Теорема про чотири фарби"
    ],
    "correct_answer": "Мастер-теорема (Master theorem)",
    "explanation": "Мастер-теорема дозволяє визначити асимптотичну складність рекурентних співвідношень виду T(n) = aT(n/b) + f(n).",
    "topic": "1.2.4"
  },
  {
    "id": 10,
    "question": "Що є основною перевагою функціонального програмування для паралельних обчислень?",
    "options": [
      "Швидша компіляція програм",
      "Відсутність побічних ефектів спрощує паралелізацію",
      "Менше споживання пам'яті",
      "Простіший синтаксис мови"
    ],
    "correct_answer": "Відсутність побічних ефектів спрощує паралелізацію",
    "explanation": "У функціональному програмуванні функції не змінюють глобальний стан, що усуває проблеми синхронізації при паралельному виконанні.",
    "topic": "1.3.1"
  },
  {
    "id": 11,
    "question": "Який клас складності містить задачі, для яких існує поліноміальний алгоритм перевірки розв'язку?",
    "options": [
      "P",
      "NP",
      "NP-повні",
      "EXPTIME"
    ],
    "correct_answer": "NP",
    "explanation": "Клас NP (недетерміновано поліноміальний) містить задачі, правильність розв'язку яких можна перевірити за поліноміальний час.",
    "topic": "1.3.2"
  },
  {
    "id": 12,
    "question": "Яка мінімальна кількість логічних елементів NAND потрібна для реалізації функції XOR?",
    "options": [
      "2",
      "3",
      "4",
      "5"
    ],
    "correct_answer": "4",
    "explanation": "Функцію XOR можна реалізувати використовуючи 4 елементи NAND, оскільки NAND є функціонально повним елементом.",
    "topic": "2.1.1"
  },
  {
    "id": 13,
    "question": "Яке найбільше від'ємне число можна представити в 8-бітному доповнювальному коді?",
    "options": [
      "-127",
      "-128",
      "-255",
      "-256"
    ],
    "correct_answer": "-128",
    "explanation": "У 8-бітному доповнювальному коді діапазон чисел від -128 до +127, де -128 представлено як 10000000.",
    "topic": "2.2.1"
  },
  {
    "id": 14,
    "question": "Яка проблема виникає при обчисленні (a + b) / 2 для великих додатних чисел з плаваючою комою?",
    "options": [
      "Ділення на нуль",
      "Втрата точності через переповнення при додаванні",
      "Від'ємний результат",
      "Нескінченний цикл"
    ],
    "correct_answer": "Втрата точності через переповнення при додаванні",
    "explanation": "Сума a + b може перевищити максимальне представиме число. Краще використовувати формулу a/2 + b/2 або a + (b-a)/2.",
    "topic": "2.2.2"
  },
  {
    "id": 15,
    "question": "Яка технологія дозволяє CPU продовжувати роботу поки відбувається обмін даними між пам'яттю та периферійними пристроями?",
    "options": [
      "Кешування",
      "Віртуальна пам'ять",
      "DMA (Direct Memory Access)",
      "Pipelining"
    ],
    "correct_answer": "DMA (Direct Memory Access)",
    "explanation": "DMA контролер може передавати дані між пам'яттю та пристроями без участі CPU, звільняючи процесор для інших задач.",
    "topic": "2.3.1"
  },
  {
    "id": 16,
    "question": "Яка перевага модифікованої Гарвардської архітектури над класичною Гарвардською?",
    "options": [
      "Вища тактова частота",
      "Можливість виконувати код з пам'яті даних",
      "Менше енергоспоживання",
      "Простіша схемотехніка"
    ],
    "correct_answer": "Можливість виконувати код з пам'яті даних",
    "explanation": "Модифікована Гарвардська архітектура дозволяє завантажувати програми в пам'ять даних та виконувати їх, що підвищує гнучкість.",
    "topic": "2.4.1"
  },
  {
    "id": 17,
    "question": "Що таке 'cache miss penalty' в контексті ієрархії пам'яті?",
    "options": [
      "Штраф за неправильне передбачення гілки",
      "Час, необхідний для завантаження даних з повільнішої пам'яті",
      "Втрата даних при відключенні живлення",
      "Зниження частоти процесора"
    ],
    "correct_answer": "Час, необхідний для завантаження даних з повільнішої пам'яті",
    "explanation": "Cache miss penalty - це додатковий час, який витрачається на отримання даних з наступного рівня ієрархії пам'яті при промаху кешу.",
    "topic": "2.4.2"
  },
  {
    "id": 18,
    "question": "Який інтерфейс найчастіше використовується для підключення високошвидкісних SSD накопичувачів?",
    "options": [
      "USB 2.0",
      "SATA",
      "NVMe",
      "PS/2"
    ],
    "correct_answer": "NVMe",
    "explanation": "NVMe (Non-Volatile Memory Express) розроблений спеціально для SSD і забезпечує найвищу швидкість через інтерфейс PCIe.",
    "topic": "2.4.3"
  },
  {
    "id": 19,
    "question": "Для чого використовується нормальна форма Бойса-Кодда (BCNF)?",
    "options": [
      "Для прискорення запитів до бази даних",
      "Для усунення аномалій оновлення, які можуть залишитися після 3NF",
      "Для шифрування даних у таблицях",
      "Для створення індексів"
    ],
    "correct_answer": "Для усунення аномалій оновлення, які можуть залишитися після 3NF",
    "explanation": "BCNF є строгішою формою 3NF, яка усуває всі аномалії, пов'язані з функціональними залежностями.",
    "topic": "3.1.1"
  },
  {
    "id": 20,
    "question": "Яка властивість ACID гарантує, що транзакція або виконається повністю, або не виконається взагалі?",
    "options": [
      "Atomicity (Атомарність)",
      "Consistency (Узгодженість)",
      "Isolation (Ізольованість)",
      "Durability (Довговічність)"
    ],
    "correct_answer": "Atomicity (Атомарність)",
    "explanation": "Атомарність означає, що всі операції в транзакції виконуються як єдине ціле - або всі успішно, або жодна.",
    "topic": "3.2.1"
  },
  {
    "id": 21,
    "question": "У ER-моделі відношення 'багато-до-багатьох' між сутностями Student та Course потребує:",
    "options": [
      "Додаткового атрибута в таблиці Student",
      "Додаткового атрибута в таблиці Course",
      "Проміжної таблиці зв'язку",
      "Об'єднання таблиць Student та Course"
    ],
    "correct_answer": "Проміжної таблиці зв'язку",
    "explanation": "Відношення M:N реалізується через проміжну таблицю, яка містить зовнішні ключі обох пов'язаних таблиць.",
    "topic": "3.3.1"
  },
  {
    "id": 22,
    "question": "Що таке 'referential integrity' (посилальна цілісність) в реляційних базах даних?",
    "options": [
      "Унікальність первинних ключів",
      "Відповідність зовнішніх ключів існуючим первинним ключам",
      "Правильність типів даних",
      "Швидкість виконання запитів"
    ],
    "correct_answer": "Відповідність зовнішніх ключів існуючим первинним ключам",
    "explanation": "Посилальна цілісність гарантує, що значення зовнішнього ключа або відповідає існуючому первинному ключу, або є NULL.",
    "topic": "3.4.1"
  },
  {
    "id": 23,
    "question": "Який SQL оператор належить до DCL (Data Control Language)?",
    "options": [
      "SELECT",
      "UPDATE",
      "GRANT",
      "COMMIT"
    ],
    "correct_answer": "GRANT",
    "explanation": "GRANT використовується для надання привілеїв користувачам бази даних і належить до DCL.",
    "topic": "3.5.1"
  },
  {
    "id": 24,
    "question": "Яка операція реляційної алгебри еквівалентна SQL конструкції WHERE?",
    "options": [
      "Проекція (π)",
      "Вибірка (σ)",
      "З'єднання (⋈)",
      "Декартів добуток (×)"
    ],
    "correct_answer": "Вибірка (σ)",
    "explanation": "Операція вибірки (selection) σ фільтрує рядки за умовою, що відповідає функціональності WHERE в SQL.",
    "topic": "3.6.1"
  },
  {
    "id": 25,
    "question": "Чим відрізняється емерджентність системи від простої суми властивостей її компонентів?",
    "options": [
      "Емерджентність - це властивості окремих компонентів",
      "Емерджентність - це нові властивості, які виникають при взаємодії компонентів",
      "Емерджентність зменшує складність системи",
      "Емерджентність не впливає на систему"
    ],
    "correct_answer": "Емерджентність - це нові властивості, які виникають при взаємодії компонентів",
    "explanation": "Емерджентність означає появу у системи властивостей, які не притаманні її окремим елементам (системний ефект).",
    "topic": "4.1.1"
  },
  {
    "id": 26,
    "question": "Яка основна характеристика відкритих систем?",
    "options": [
      "Відсутність зовнішніх зв'язків",
      "Постійний обмін речовиною, енергією чи інформацією з оточенням",
      "Незмінність внутрішньої структури",
      "Відсутність входів та виходів"
    ],
    "correct_answer": "Постійний обмін речовиною, енергією чи інформацією з оточенням",
    "explanation": "Відкриті системи активно взаємодіють з навколишнім середовищем, на відміну від закритих систем.",
    "topic": "4.1.2"
  },
  {
    "id": 27,
    "question": "У чому головна відмінність між складними та великими системами?",
    "options": [
      "Великі системи завжди складніші",
      "Складність визначається взаємозв'язками, а не кількістю елементів",
      "Немає принципової різниці",
      "Великі системи не можуть бути простими"
    ],
    "correct_answer": "Складність визначається взаємозв'язками, а не кількістю елементів",
    "explanation": "Система може бути великою (багато елементів) але простою, або малою але складною через складні взаємодії.",
    "topic": "4.1.3"
  },
  {
    "id": 28,
    "question": "Що представляє модель 'чорної скриньки' для системи?",
    "options": [
      "Детальну внутрішню структуру",
      "Тільки входи, виходи та зовнішню поведінку",
      "Історію розвитку системи",
      "Фізичну реалізацію системи"
    ],
    "correct_answer": "Тільки входи, виходи та зовнішню поведінку",
    "explanation": "Модель 'чорної скриньки' абстрагується від внутрішньої структури, фокусуючись на зовнішній поведінці системи.",
    "topic": "4.2.1"
  },
  {
    "id": 29,
    "question": "Яка різниця між математичною та комп'ютерною моделлю?",
    "options": [
      "Математична модель не може бути реалізована на комп'ютері",
      "Комп'ютерна модель - це програмна реалізація для симуляції",
      "Математична модель менш точна",
      "Немає принципової різниці"
    ],
    "correct_answer": "Комп'ютерна модель - це програмна реалізація для симуляції",
    "explanation": "Комп'ютерна модель дозволяє проводити експерименти та симуляції на основі математичної моделі.",
    "topic": "4.2.2"
  },
  {
    "id": 30,
    "question": "Що означає гомоморфізм між системою та її моделлю?",
    "options": [
      "Повна ідентичність системи та моделі",
      "Збереження структури при спрощенні",
      "Випадкова подібність",
      "Відсутність зв'язку між системою та моделлю"
    ],
    "correct_answer": "Збереження структури при спрощенні",
    "explanation": "Гомоморфізм зберігає основні структурні властивості системи в моделі при певному рівні абстракції.",
    "topic": "4.2.3"
  },
  {
    "id": 31,
    "question": "Яка інформаційна система використовується для управління взаємовідносинами з клієнтами?",
    "options": [
      "ERP",
      "CRM",
      "SCM",
      "DSS"
    ],
    "correct_answer": "CRM",
    "explanation": "CRM (Customer Relationship Management) спеціалізується на управлінні взаємодією з клієнтами та покращенні обслуговування.",
    "topic": "4.3.1"
  },
  {
    "id": 32,
    "question": "Що включає в себе правове забезпечення інформаційної системи?",
    "options": [
      "Технічні специфікації обладнання",
      "Алгоритми шифрування даних",
      "Нормативні акти та ліцензійні угоди",
      "Навчальні матеріали для користувачів"
    ],
    "correct_answer": "Нормативні акти та ліцензійні угоди",
    "explanation": "Правове забезпечення регулює використання ІС відповідно до законодавства та ліцензійних вимог.",
    "topic": "4.3.2"
  },
  {
    "id": 33,
    "question": "Яка техніка збору вимог найкраще підходить для виявлення неявних потреб користувачів?",
    "options": [
      "Анкетування",
      "Спостереження за роботою",
      "Аналіз документації",
      "Мозковий штурм"
    ],
    "correct_answer": "Спостереження за роботою",
    "explanation": "Спостереження дозволяє виявити реальні робочі процеси та проблеми, які користувачі можуть не усвідомлювати або не згадати.",
    "topic": "4.4.1"
  },
  {
    "id": 34,
    "question": "Що таке 'acceptance criteria' в контексті user story?",
    "options": [
      "Опис функціональності",
      "Умови, за яких історія вважається виконаною",
      "Пріоритет історії",
      "Час на реалізацію"
    ],
    "correct_answer": "Умови, за яких історія вважається виконаною",
    "explanation": "Acceptance criteria визначають конкретні умови, які мають бути виконані для успішного завершення user story.",
    "topic": "4.4.2"
  },
  {
    "id": 35,
    "question": "Яка нефункціональна вимога описує здатність системи обробляти зростаюче навантаження?",
    "options": [
      "Надійність",
      "Безпека",
      "Масштабованість",
      "Сумісність"
    ],
    "correct_answer": "Масштабованість",
    "explanation": "Масштабованість визначає, наскільки ефективно система може розширюватися для обробки збільшеного обсягу роботи.",
    "topic": "4.4.3"
  },
  {
    "id": 36,
    "question": "Що є основною метою архітектурного проєктування?",
    "options": [
      "Детальний опис алгоритмів",
      "Визначення основних компонентів системи та їх взаємодії",
      "Розробка користувацького інтерфейсу",
      "Написання програмного коду"
    ],
    "correct_answer": "Визначення основних компонентів системи та їх взаємодії",
    "explanation": "Архітектурне проєктування фокусується на високорівневій структурі системи та взаємозв'язках між її основними частинами.",
    "topic": "4.5.1"
  },
  {
    "id": 37,
    "question": "Яка архітектура найкраще підходить для систем, що реагують на зовнішні події в реальному часі?",
    "options": [
      "Монолітна архітектура",
      "Шарова архітектура",
      "Подієво-керована архітектура",
      "Клієнт-серверна архітектура"
    ],
    "correct_answer": "Подієво-керована архітектура",
    "explanation": "Event-driven architecture оптимізована для обробки асинхронних подій та забезпечує високу реактивність системи.",
    "topic": "4.5.2"
  },
  {
    "id": 38,
    "question": "Який тип зв'язку між класами означає відношення 'має' (has-a)?",
    "options": [
      "Наслідування",
      "Реалізація",
      "Композиція/Агрегація",
      "Залежність"
    ],
    "correct_answer": "Композиція/Агрегація",
    "explanation": "Композиція та агрегація представляють відношення 'має', де один клас містить об'єкти іншого класу.",
    "topic": "4.5.3"
  },
  {
    "id": 39,
    "question": "На UML діаграмі послідовності вертикальні пунктирні лінії представляють:",
    "options": [
      "Повідомлення між об'єктами",
      "Лінії життя об'єктів",
      "Умовні переходи",
      "Паралельні процеси"
    ],
    "correct_answer": "Лінії життя об'єктів",
    "explanation": "Lifelines показують існування об'єкта протягом часу взаємодії на діаграмі послідовності.",
    "topic": "4.5.4"
  },
  {
    "id": 40,
    "question": "Який патерн проєктування дозволяє створювати об'єкти без вказівки їх конкретних класів?",
    "options": [
      "Singleton",
      "Abstract Factory",
      "Observer",
      "Decorator"
    ],
    "correct_answer": "Abstract Factory",
    "explanation": "Abstract Factory надає інтерфейс для створення сімейств пов'язаних об'єктів без специфікації їх конкретних класів.",
    "topic": "4.5.5"
  },
  {
    "id": 41,
    "question": "Який принцип найменування змінних покращує читабельність коду?",
    "options": [
      "Використання максимально коротких імен",
      "Використання тільки англійських букв",
      "Використання змістовних імен, що описують призначення",
      "Використання тільки малих літер"
    ],
    "correct_answer": "Використання змістовних імен, що описують призначення",
    "explanation": "Змістовні імена змінних роблять код самодокументованим та полегшують його розуміння та підтримку.",
    "topic": "4.6.1"
  },
  {
    "id": 42,
    "question": "Що таке 'code scaffolding' в контексті автоматичної генерації коду?",
    "options": [
      "Видалення зайвого коду",
      "Створення базової структури коду за шаблоном",
      "Оптимізація існуючого коду",
      "Тестування згенерованого коду"
    ],
    "correct_answer": "Створення базової структури коду за шаблоном",
    "explanation": "Scaffolding автоматично генерує базовий каркас коду (класи, методи, конфігурації) для прискорення розробки.",
    "topic": "4.6.2"
  },
  {
    "id": 43,
    "question": "Яка перевага використання conditional breakpoints при налагодженні?",
    "options": [
      "Швидше виконання програми",
      "Зупинка виконання тільки при виконанні певної умови",
      "Автоматичне виправлення помилок",
      "Краща візуалізація коду"
    ],
    "correct_answer": "Зупинка виконання тільки при виконанні певної умови",
    "explanation": "Умовні точки зупинки спрацьовують лише коли задана умова істинна, що економить час при налагодженні специфічних сценаріїв.",
    "topic": "4.6.3"
  },
  {
    "id": 44,
    "question": "Що таке 'feature branch' в Git?",
    "options": [
      "Основна гілка проекту",
      "Гілка для розробки нової функціональності",
      "Гілка для виправлення помилок",
      "Архівна гілка"
    ],
    "correct_answer": "Гілка для розробки нової функціональності",
    "explanation": "Feature branch створюється для ізольованої розробки нової функціональності без впливу на основну гілку.",
    "topic": "4.6.4"
  },
  {
    "id": 45,
    "question": "Яка основна мета CI/CD pipeline?",
    "options": [
      "Зменшення кількості розробників",
      "Автоматизація процесу від коміту до розгортання",
      "Збільшення кількості функцій",
      "Зменшення вартості серверів"
    ],
    "correct_answer": "Автоматизація процесу від коміту до розгортання",
    "explanation": "CI/CD автоматизує збірку, тестування та розгортання коду, забезпечуючи швидку та надійну доставку змін.",
    "topic": "4.6.5"
  },
  {
    "id": 46,
    "question": "У чому різниця між тестуванням методом білої та чорної скриньки?",
    "options": [
      "Білий ящик тестує тільки інтерфейс, чорний - реалізацію",
      "Білий ящик вимагає знання внутрішньої структури, чорний - ні",
      "Білий ящик швидший, чорний - повільніший",
      "Немає принципової різниці"
    ],
    "correct_answer": "Білий ящик вимагає знання внутрішньої структури, чорний - ні",
    "explanation": "White-box testing базується на знанні внутрішньої структури коду, black-box - тільки на специфікації.",
    "topic": "4.7.1"
  },
  {
    "id": 47,
    "question": "На якому рівні тестування перевіряється взаємодія між модулями системи?",
    "options": [
      "Модульне тестування",
      "Інтеграційне тестування",
      "Системне тестування",
      "Приймальне тестування"
    ],
    "correct_answer": "Інтеграційне тестування",
    "explanation": "Інтеграційне тестування фокусується на перевірці правильності взаємодії між окремими модулями або компонентами.",
    "topic": "4.7.2"
  },
  {
    "id": 48,
    "question": "Який основний принцип TDD (Test-Driven Development)?",
    "options": [
      "Спочатку код, потім тести",
      "Тести пишуться після розгортання",
      "Спочатку тест, потім код для його проходження",
      "Тести пишуться іншою командою"
    ],
    "correct_answer": "Спочатку тест, потім код для його проходження",
    "explanation": "В TDD спочатку пишеться тест, що падає (Red), потім мінімальний код для його проходження (Green), потім рефакторинг.",
    "topic": "4.7.3"
  },
  {
    "id": 49,
    "question": "Що перевіряється під час performance testing?",
    "options": [
      "Правильність алгоритмів",
      "Зручність інтерфейсу",
      "Швидкодія та використання ресурсів під навантаженням",
      "Відповідність документації"
    ],
    "correct_answer": "Швидкодія та використання ресурсів під навантаженням",
    "explanation": "Performance testing оцінює час відгуку, пропускну здатність, використання CPU/пам'яті під різним навантаженням.",
    "topic": "4.7.4"
  },
  {
    "id": 50,
    "question": "Яка основна відмінність каскадної моделі від ітеративної?",
    "options": [
      "Каскадна дешевша в реалізації",
      "Каскадна не допускає повернення до попередніх етапів",
      "Ітеративна не має етапу тестування",
      "Немає принципової різниці"
    ],
    "correct_answer": "Каскадна не допускає повернення до попередніх етапів",
    "explanation": "У каскадній моделі етапи виконуються послідовно без можливості повернення, що робить її негнучкою при змінах вимог.",
    "topic": "4.8.1"
  },
  {
    "id": 51,
    "question": "Яка методологія розробки використовує спринти фіксованої довжини?",
    "options": [
      "Waterfall",
      "Kanban",
      "Scrum",
      "Spiral"
    ],
    "correct_answer": "Scrum",
    "explanation": "Scrum організовує роботу в спринти - фіксовані часові періоди (зазвичай 2-4 тижні), протягом яких команда створює потенційно готовий до випуску продукт.",
    "topic": "4.8.2"
  },
  {
    "id": 52,
    "question": "Хто відповідає за максимізацію цінності продукту в Scrum команді?",
    "options": [
      "Scrum Master",
      "Product Owner",
      "Development Team",
      "Stakeholders"
    ],
    "correct_answer": "Product Owner",
    "explanation": "Product Owner відповідає за управління Product Backlog та забезпечення максимальної цінності продукту для бізнесу.",
    "topic": "4.8.3"
  },
  {
    "id": 53,
    "question": "Який документ створюється на етапі ініціації IT проєкту?",
    "options": [
      "Технічне завдання",
      "Статут проєкту (Project Charter)",
      "План тестування",
      "Звіт про виконання"
    ],
    "correct_answer": "Статут проєкту (Project Charter)",
    "explanation": "Project Charter формально авторизує існування проєкту та надає менеджеру повноваження використовувати ресурси організації.",
    "topic": "4.8.4"
  },
  {
    "id": 54,
    "question": "Що означає поняття 'кіберпростір' в контексті інформаційної безпеки?",
    "options": [
      "Фізичне розташування серверів",
      "Віртуальне середовище взаємодії інформаційних систем",
      "Захищена мережа організації",
      "Хмарне сховище даних"
    ],
    "correct_answer": "Віртуальне середовище взаємодії інформаційних систем",
    "explanation": "Кіберпростір - це віртуальне середовище, створене цифровими технологіями для обміну інформацією та взаємодії.",
    "topic": "5.1.1"
  },
  {
    "id": 55,
    "question": "На якому рівні розглядається інформаційна безпека як складова національної безпеки?",
    "options": [
      "Особистому",
      "Корпоративному",
      "Державному",
      "Технічному"
    ],
    "correct_answer": "Державному",
    "explanation": "На державному рівні інформаційна безпека є критичною складовою національної безпеки, що захищає критичну інфраструктуру країни.",
    "topic": "5.1.2"
  },
  {
    "id": 56,
    "question": "Яка різниця між кібербезпекою та захистом інформації?",
    "options": [
      "Це однакові поняття",
      "Кібербезпека ширша і включає захист кіберпростору",
      "Захист інформації ширший за кібербезпеку",
      "Кібербезпека стосується лише інтернету"
    ],
    "correct_answer": "Кібербезпека ширша і включає захист кіберпростору",
    "explanation": "Кібербезпека охоплює захист всього кіберпростору, включаючи системи, мережі та дані, тоді як захист інформації фокусується на даних.",
    "topic": "5.1.3"
  },
  {
    "id": 57,
    "question": "Який вид захисту інформації використовує математичні алгоритми для забезпечення конфіденційності?",
    "options": [
      "Технічний",
      "Інженерний",
      "Криптографічний",
      "Організаційний"
    ],
    "correct_answer": "Криптографічний",
    "explanation": "Криптографічний захист використовує математичні методи шифрування для забезпечення конфіденційності та цілісності даних.",
    "topic": "5.1.4"
  },
  {
    "id": 58,
    "question": "Що з переліченого НЕ входить до тріади CIA інформаційної безпеки?",
    "options": [
      "Конфіденційність (Confidentiality)",
      "Цілісність (Integrity)",
      "Доступність (Availability)",
      "Автентичність (Authenticity)"
    ],
    "correct_answer": "Автентичність (Authenticity)",
    "explanation": "Класична тріада CIA включає Confidentiality, Integrity, Availability. Автентичність є додатковим принципом безпеки.",
    "topic": "5.1.5"
  },
  {
    "id": 59,
    "question": "Який принцип кібербезпеки передбачає надання користувачам мінімально необхідних прав доступу?",
    "options": [
      "Оборона в глибину",
      "Принцип найменших привілеїв",
      "Розділення обов'язків",
      "Ешелонований захист"
    ],
    "correct_answer": "Принцип найменших привілеїв",
    "explanation": "Принцип найменших привілеїв (Least Privilege) обмежує права користувачів до мінімально необхідних для виконання їх функцій.",
    "topic": "5.1.6"
  },
  {
    "id": 60,
    "question": "Що таке 'zero-day' вразливість?",
    "options": [
      "Вразливість, виявлена в день випуску ПЗ",
      "Вразливість, невідома виробнику",
      "Вразливість з нульовим ризиком",
      "Вразливість, що існує нуль днів"
    ],
    "correct_answer": "Вразливість, невідома виробнику",
    "explanation": "Zero-day - це вразливість, про яку не знає виробник ПЗ і для якої немає патчу, що робить її особливо небезпечною.",
    "topic": "5.2.1"
  },
  {
    "id": 61,
    "question": "Яка атака спрямована на порушення конфіденційності без зміни даних?",
    "options": [
      "Активна атака",
      "Пасивна атака",
      "DoS атака",
      "Ін'єкція коду"
    ],
    "correct_answer": "Пасивна атака",
    "explanation": "Пасивні атаки (прослуховування, моніторинг) спрямовані на отримання інформації без її модифікації чи порушення доступності.",
    "topic": "5.2.2"
  },
  {
    "id": 62,
    "question": "Що таке APT в контексті кібербезпеки?",
    "options": [
      "Automatic Protection Tool",
      "Advanced Persistent Threat",
      "Application Programming Technology",
      "Active Protection Technique"
    ],
    "correct_answer": "Advanced Persistent Threat",
    "explanation": "APT - це складні, довготривалі та цілеспрямовані кібератаки, часто здійснювані державними акторами або організованими групами.",
    "topic": "5.2.3"
  },
  {
    "id": 63,
    "question": "Яка основна мета кібертероризму?",
    "options": [
      "Фінансова вигода",
      "Крадіжка даних",
      "Створення страху та паніки в суспільстві",
      "Промислове шпигунство"
    ],
    "correct_answer": "Створення страху та паніки в суспільстві",
    "explanation": "Кібертероризм використовує кібератаки для досягнення політичних або ідеологічних цілей через залякування населення.",
    "topic": "5.2.4"
  },
  {
    "id": 64,
    "question": "Хто становить найбільшу загрозу як insider threat?",
    "options": [
      "Зовнішні хакери",
      "Конкуренти",
      "Незадоволені співробітники з доступом",
      "Випадкові відвідувачі"
    ],
    "correct_answer": "Незадоволені співробітники з доступом",
    "explanation": "Інсайдери мають легітимний доступ до систем і знання про слабкі місця, що робить їх потенційно найнебезпечнішими.",
    "topic": "5.2.5"
  },
  {
    "id": 65,
    "question": "Що є основою комплексної системи захисту інформації (КСЗІ)?",
    "options": [
      "Використання найновішого антивірусу",
      "Багаторівневий підхід до захисту",
      "Один потужний файрвол",
      "Регулярне резервне копіювання"
    ],
    "correct_answer": "Багаторівневий підхід до захисту",
    "explanation": "КСЗІ базується на комплексному підході, що поєднує технічні, організаційні, правові та інші заходи захисту.",
    "topic": "5.2.6"
  },
  {
    "id": 66,
    "question": "Яка основна характеристика відрізняє worm (черв'як) від virus?",
    "options": [
      "Черв'як не шкодить системі",
      "Черв'як поширюється самостійно без носія",
      "Черв'як не може бути виявлений",
      "Черв'як працює тільки в Linux"
    ],
    "correct_answer": "Черв'як поширюється самостійно без носія",
    "explanation": "Черв'як здатний самостійно поширюватися через мережу, не потребуючи зараженого файлу-носія, на відміну від вірусу.",
    "topic": "5.3.1"
  },
  {
    "id": 67,
    "question": "Який метод соціальної інженерії використовується у phishing атаках?",
    "options": [
      "Фізичний доступ до комп'ютера",
      "Підробка довірених джерел для отримання даних",
      "Встановлення шкідливого обладнання",
      "Перехоплення мережевого трафіку"
    ],
    "correct_answer": "Підробка довірених джерел для отримання даних",
    "explanation": "Фішинг використовує підроблені email, веб-сайти або повідомлення, що імітують довірені джерела для крадіжки облікових даних.",
    "topic": "5.3.2"
  },
  {
    "id": 68,
    "question": "Що таке botnet в контексті DDoS-атак?",
    "options": [
      "Програма для автоматизації атак",
      "Мережа заражених комп'ютерів під контролем зловмисника",
      "Тип шкідливого ПЗ",
      "Метод шифрування трафіку"
    ],
    "correct_answer": "Мережа заражених комп'ютерів під контролем зловмисника",
    "explanation": "Botnet - це мережа заражених пристроїв (ботів), які контролюються віддалено для проведення масованих атак.",
    "topic": "5.3.3"
  },
  {
    "id": 69,
    "question": "Що означає O(g(n)) в нотації 'велике O' для функції f(n)?",
    "options": [
      "f(n) точно дорівнює g(n)",
      "f(n) росте не швидше ніж g(n) помножене на константу",
      "f(n) завжди менше g(n)",
      "f(n) має таку ж кількість операцій як g(n)"
    ],
    "correct_answer": "f(n) росте не швидше ніж g(n) помножене на константу",
    "explanation": "O-нотація описує верхню межу зростання функції - існують константи c та n₀, такі що f(n) ≤ c·g(n) для всіх n ≥ n₀.",
    "topic": "6.1.1"
  },
  {
    "id": 70,
    "question": "Для чого використовується градієнт функції багатьох змінних?",
    "options": [
      "Знаходження площі під поверхнею",
      "Визначення напрямку найшвидшого зростання функції",
      "Обчислення об'єму фігури",
      "Розв'язання диференціальних рівнянь"
    ],
    "correct_answer": "Визначення напрямку найшвидшого зростання функції",
    "explanation": "Градієнт - це вектор часткових похідних, який вказує напрямок найшвидшого зростання функції в даній точці.",
    "topic": "6.1.2"
  },
  {
    "id": 71,
    "question": "Яка основна перевага методу трапецій над методом прямокутників для чисельного інтегрування?",
    "options": [
      "Простіша реалізація",
      "Вища точність при тій же кількості розбиттів",
      "Менше обчислень",
      "Працює з розривними функціями"
    ],
    "correct_answer": "Вища точність при тій же кількості розбиттів",
    "explanation": "Метод трапецій апроксимує площу трапеціями замість прямокутників, що дає кращу апроксимацію кривої.",
    "topic": "6.1.3"
  },
  {
    "id": 72,
    "question": "Що таке матриця Гессе (Hessian) для функції багатьох змінних?",
    "options": [
      "Матриця перших похідних",
      "Матриця других часткових похідних",
      "Матриця коефіцієнтів системи рівнянь",
      "Матриця власних значень"
    ],
    "correct_answer": "Матриця других часткових похідних",
    "explanation": "Матриця Гессе містить всі другі часткові похідні функції і використовується для аналізу локальних екстремумів.",
    "topic": "6.1.4"
  },
  {
    "id": 73,
    "question": "У чому полягає основна ідея методу градієнтного спуску?",
    "options": [
      "Рух в напрямку градієнта для знаходження максимуму",
      "Рух проти градієнта для знаходження мінімуму",
      "Випадковий пошук оптимуму",
      "Повний перебір всіх точок"
    ],
    "correct_answer": "Рух проти градієнта для знаходження мінімуму",
    "explanation": "Градієнтний спуск ітеративно рухається в напрямку, протилежному градієнту, щоб знайти локальний мінімум функції.",
    "topic": "6.1.5"
  },
  {
    "id": 74,
    "question": "Що мінімізує метод найменших квадратів при лінійній регресії?",
    "options": [
      "Суму абсолютних відхилень",
      "Максимальне відхилення",
      "Суму квадратів відхилень",
      "Кількість викидів"
    ],
    "correct_answer": "Суму квадратів відхилень",
    "explanation": "МНК мінімізує суму квадратів різниць між спостережуваними та передбаченими значеннями.",
    "topic": "6.1.6"
  },
  {
    "id": 75,
    "question": "Для чого використовується ряд Тейлора?",
    "options": [
      "Точне обчислення інтегралів",
      "Апроксимація функцій поліномами",
      "Розв'язання систем рівнянь",
      "Знаходження власних значень"
    ],
    "correct_answer": "Апроксимація функцій поліномами",
    "explanation": "Ряд Тейлора дозволяє наблизити складну функцію поліномом в околі заданої точки.",
    "topic": "6.1.7"
  },
  {
    "id": 76,
    "question": "Що визначає порядок диференціального рівняння?",
    "options": [
      "Кількість змінних",
      "Найвищий порядок похідної",
      "Кількість розв'язків",
      "Ступінь полінома"
    ],
    "correct_answer": "Найвищий порядок похідної",
    "explanation": "Порядок диференціального рівняння визначається найвищим порядком похідної, що входить в рівняння.",
    "topic": "6.1.8"
  },
  {
    "id": 77,
    "question": "Яке рівняння описує гіперплощину в n-вимірному просторі?",
    "options": [
      "x² + y² = r²",
      "a₁x₁ + a₂x₂ + ... + aₙxₙ + b = 0",
      "x²/a² + y²/b² = 1",
      "z = x² + y²"
    ],
    "correct_answer": "a₁x₁ + a₂x₂ + ... + aₙxₙ + b = 0",
    "explanation": "Гіперплощина - це лінійне рівняння в n-вимірному просторі, узагальнення площини на вищі розмірності.",
    "topic": "6.1.9"
  },
  {
    "id": 78,
    "question": "Коли квадратна матриця має обернену матрицю?",
    "options": [
      "Завжди",
      "Коли її визначник не дорівнює нулю",
      "Коли вона симетрична",
      "Коли всі елементи додатні"
    ],
    "correct_answer": "Коли її визначник не дорівнює нулю",
    "explanation": "Матриця є оберненою (невиродженою) тоді і тільки тоді, коли її визначник відмінний від нуля.",
    "topic": "6.1.10"
  },
  {
    "id": 79,
    "question": "Що показують власні вектори матриці?",
    "options": [
      "Напрямки максимального розтягу",
      "Напрямки, які не змінюються при перетворенні",
      "Ортогональні напрямки",
      "Напрямки до початку координат"
    ],
    "correct_answer": "Напрямки, які не змінюються при перетворенні",
    "explanation": "Власні вектори - це вектори, які при множенні на матрицю змінюють лише довжину, але не напрямок.",
    "topic": "6.1.11"
  },
  {
    "id": 80,
    "question": "Коли система лінійних рівнянь має єдиний розв'язок?",
    "options": [
      "Коли кількість рівнянь дорівнює кількості невідомих",
      "Коли ранг матриці системи дорівнює кількості невідомих",
      "Коли визначник дорівнює одиниці",
      "Коли всі коефіцієнти додатні"
    ],
    "correct_answer": "Коли ранг матриці системи дорівнює кількості невідомих",
    "explanation": "За теоремою Кронекера-Капеллі, система має єдиний розв'язок, коли ранги основної та розширеної матриць рівні кількості невідомих.",
    "topic": "6.1.12"
  },
  {
    "id": 81,
    "question": "Що таке базис векторного простору?",
    "options": [
      "Будь-який набір векторів",
      "Лінійно незалежна система векторів, що породжує весь простір",
      "Набір ортогональних векторів",
      "Набір одиничних векторів"
    ],
    "correct_answer": "Лінійно незалежна система векторів, що породжує весь простір",
    "explanation": "Базис - це мінімальний набір лінійно незалежних векторів, через який можна виразити будь-який вектор простору.",
    "topic": "6.1.13"
  },
  {
    "id": 82,
    "question": "Скільки елементів містить булеан (множина всіх підмножин) множини з n елементів?",
    "options": [
      "n",
      "n²",
      "2ⁿ",
      "n!"
    ],
    "correct_answer": "2ⁿ",
    "explanation": "Кожен елемент може або входити, або не входити в підмножину, що дає 2ⁿ можливих підмножин.",
    "topic": "6.2.1"
  },
  {
    "id": 83,
    "question": "Яка властивість характеризує відношення еквівалентності?",
    "options": [
      "Тільки рефлексивність",
      "Рефлексивність, симетричність та транзитивність",
      "Тільки транзитивність",
      "Антисиметричність"
    ],
    "correct_answer": "Рефлексивність, симетричність та транзитивність",
    "explanation": "Відношення еквівалентності має всі три властивості: кожен елемент еквівалентний собі, якщо a~b то b~a, якщо a~b і b~c то a~c.",
    "topic": "6.2.2"
  },
  {
    "id": 84,
    "question": "Скількома способами можна вибрати k елементів з n без врахування порядку?",
    "options": [
      "n!",
      "n!/(n-k)!",
      "n!/k!",
      "n!/(k!(n-k)!)"
    ],
    "correct_answer": "n!/(k!(n-k)!)",
    "explanation": "Це формула для числа сполучень C(n,k) - вибір k елементів з n без врахування порядку.",
    "topic": "6.2.3"
  },
  {
    "id": 85,
    "question": "Яка логічна операція відповідає імплікації 'якщо A, то B'?",
    "options": [
      "A AND B",
      "A OR B",
      "(NOT A) OR B",
      "A XOR B"
    ],
    "correct_answer": "(NOT A) OR B",
    "explanation": "Імплікація A→B хибна тільки коли A істинне, а B хибне, що еквівалентно (¬A)∨B.",
    "topic": "6.2.4"
  },
  {
    "id": 86,
    "question": "Що таке СДНФ (Совершенная Дизъюнктивная Нормальная Форма)?",
    "options": [
      "Добуток сум всіх змінних",
      "Сума добутків, де кожен добуток містить всі змінні",
      "Мінімальна форма булевої функції",
      "Форма з найменшою кількістю операцій"
    ],
    "correct_answer": "Сума добутків, де кожен добуток містить всі змінні",
    "explanation": "СДНФ - це диз'юнкція мінтермів, де кожен мінтерм містить всі змінні функції в прямому або інверсному вигляді.",
    "topic": "6.2.5"
  },
  {
    "id": 87,
    "question": "Що таке ступінь вершини в неорієнтованому графі?",
    "options": [
      "Відстань до найдальшої вершини",
      "Кількість інцидентних ребер",
      "Номер вершини в обході",
      "Вага всіх інцидентних ребер"
    ],
    "correct_answer": "Кількість інцидентних ребер",
    "explanation": "Ступінь вершини - це кількість ребер, що з'єднують цю вершину з іншими вершинами графа.",
    "topic": "6.2.6"
  },
  {
    "id": 88,
    "question": "Який граф називається ейлеровим?",
    "options": [
      "Граф з ейлеровим циклом",
      "Граф без циклів",
      "Повний граф",
      "Дводольний граф"
    ],
    "correct_answer": "Граф з ейлеровим циклом",
    "explanation": "Ейлерів граф містить цикл, що проходить через кожне ребро рівно один раз.",
    "topic": "6.2.7"
  },
  {
    "id": 89,
    "question": "Що таке компонента зв'язності графа?",
    "options": [
      "Найкоротший шлях між вершинами",
      "Максимальний зв'язний підграф",
      "Кількість ребер графа",
      "Центральна вершина графа"
    ],
    "correct_answer": "Максимальний зв'язний підграф",
    "explanation": "Компонента зв'язності - це максимальна множина вершин, між якими існують шляхи.",
    "topic": "6.2.8"
  },
  {
    "id": 90,
    "question": "Скільки ребер має дерево з n вершинами?",
    "options": [
      "n",
      "n-1",
      "n+1",
      "2n"
    ],
    "correct_answer": "n-1",
    "explanation": "Дерево - це зв'язний граф без циклів, який завжди має рівно n-1 ребер для n вершин.",
    "topic": "6.2.9"
  },
  {
    "id": 91,
    "question": "Що таке умовна ймовірність P(A|B)?",
    "options": [
      "Ймовірність A або B",
      "Ймовірність A і B",
      "Ймовірність A за умови, що відбулася подія B",
      "Ймовірність B за умови A"
    ],
    "correct_answer": "Ймовірність A за умови, що відбулася подія B",
    "explanation": "Умовна ймовірність P(A|B) = P(A∩B)/P(B) показує ймовірність події A, якщо відомо, що подія B відбулася.",
    "topic": "6.3.1"
  },
  {
    "id": 92,
    "question": "Для чого використовується формула Байєса?",
    "options": [
      "Обчислення безумовних ймовірностей",
      "Перерахунок умовних ймовірностей",
      "Знаходження математичного сподівання",
      "Обчислення дисперсії"
    ],
    "correct_answer": "Перерахунок умовних ймовірностей",
    "explanation": "Формула Байєса дозволяє обчислити P(A|B) через P(B|A), що корисно для оновлення ймовірностей при отриманні нової інформації.",
    "topic": "6.3.2"
  },
  {
    "id": 93,
    "question": "Що показує дисперсія випадкової величини?",
    "options": [
      "Середнє значення",
      "Найбільш ймовірне значення",
      "Міру розсіювання значень навколо середнього",
      "Суму всіх значень"
    ],
    "correct_answer": "Міру розсіювання значень навколо середнього",
    "explanation": "Дисперсія - це середнє квадратичне відхилення від математичного сподівання, що характеризує розкид даних.",
    "topic": "6.3.3"
  },
  {
    "id": 94,
    "question": "Яка властивість характеризує нормальний розподіл?",
    "options": [
      "Асиметричність",
      "Дзвоноподібна форма та симетричність відносно середнього",
      "Рівномірність на всій числовій осі",
      "Дискретність значень"
    ],
    "correct_answer": "Дзвоноподібна форма та симетричність відносно середнього",
    "explanation": "Нормальний (гаусівський) розподіл має симетричну дзвоноподібну форму з максимумом в точці математичного сподівання.",
    "topic": "6.3.4"
  },
  {
    "id": 95,
    "question": "Що означає коефіцієнт кореляції близький до -1?",
    "options": [
      "Відсутність зв'язку",
      "Сильний прямий лінійний зв'язок",
      "Сильний обернений лінійний зв'язок",
      "Нелінійний зв'язок"
    ],
    "correct_answer": "Сильний обернений лінійний зв'язок",
    "explanation": "Коефіцієнт кореляції -1 означає ідеальну обернену лінійну залежність: коли одна змінна зростає, інша зменшується.",
    "topic": "6.3.5"
  },
  {
    "id": 96,
    "question": "Що містить кореляційна матриця?",
    "options": [
      "Середні значення змінних",
      "Дисперсії змінних",
      "Коефіцієнти кореляції між всіма парами змінних",
      "Коваріації між змінними"
    ],
    "correct_answer": "Коефіцієнти кореляції між всіма парами змінних",
    "explanation": "Кореляційна матриця - симетрична матриця, де елемент (i,j) містить коефіцієнт кореляції між i-ю та j-ю змінними.",
    "topic": "6.3.6"
  },
  {
    "id": 97,
    "question": "Що таке стаціонарний випадковий процес?",
    "options": [
      "Процес без випадковості",
      "Процес зі сталими статистичними характеристиками в часі",
      "Процес, що не змінюється",
      "Детермінований процес"
    ],
    "correct_answer": "Процес зі сталими статистичними характеристиками в часі",
    "explanation": "Стаціонарний процес має незмінні в часі математичне сподівання, дисперсію та автокореляційну функцію.",
    "topic": "6.3.7"
  },
  {
    "id": 98,
    "question": "Який метод використовується для виявлення викидів у даних?",
    "options": [
      "Метод найменших квадратів",
      "Правило трьох сигм або міжквартильний розмах",
      "Кореляційний аналіз",
      "Факторний аналіз"
    ],
    "correct_answer": "Правило трьох сигм або міжквартильний розмах",
    "explanation": "Викиди часто визначають як значення, що виходять за межі μ±3σ або за межі Q1-1.5·IQR та Q3+1.5·IQR.",
    "topic": "6.3.8"
  },
  {
    "id": 99,
    "question": "Яка діаграма найкраще підходить для відображення частин від цілого?",
    "options": [
      "Точкова діаграма",
      "Гістограма",
      "Кругова діаграма",
      "Лінійний графік"
    ],
    "correct_answer": "Кругова діаграма",
    "explanation": "Кругова діаграма ефективно показує відносні частки категорій у загальній сумі, коли сума частин дорівнює 100%.",
    "topic": "6.3.9"
  },
  {
    "id": 100,
    "question": "Що показує 95% довірчий інтервал для середнього?",
    "options": [
      "95% даних лежить в цьому інтервалі",
      "З ймовірністю 95% істинне середнє лежить в цьому інтервалі",
      "Середнє дорівнює 95%",
      "5% даних є викидами"
    ],
    "correct_answer": "З ймовірністю 95% істинне середнє лежить в цьому інтервалі",
    "explanation": "Довірчий інтервал показує діапазон, в якому з заданою ймовірністю (95%) знаходиться істинне значення параметра.",
    "topic": "6.3.10"
  },
  {
    "id": 101,
    "question": "Яка помилка в перевірці статистичних гіпотез називається 'помилкою першого роду'?",
    "options": [
      "Прийняття хибної нульової гіпотези",
      "Відхилення істинної нульової гіпотези",
      "Неправильний вибір альтернативної гіпотези",
      "Помилка в обчисленнях"
    ],
    "correct_answer": "Відхилення істинної нульової гіпотези",
    "explanation": "Помилка першого роду (α) - це відхилення нульової гіпотези, коли вона насправді є істинною (хибнопозитивний результат).",
    "topic": "6.3.11"
  },
  {
    "id": 102,
    "question": "У чому основна відмінність між комутацією каналів та комутацією пакетів?",
    "options": [
      "Швидкість передачі даних",
      "Виділення ресурсів на весь сеанс vs динамічний розподіл",
      "Тип використовуваних кабелів",
      "Кількість користувачів"
    ],
    "correct_answer": "Виділення ресурсів на весь сеанс vs динамічний розподіл",
    "explanation": "При комутації каналів ресурси резервуються на весь сеанс зв'язку, а при комутації пакетів - динамічно розподіляються.",
    "topic": "7.1.1"
  },
  {
    "id": 103,
    "question": "На якому рівні моделі OSI працює протокол HTTP?",
    "options": [
      "Транспортний",
      "Мережевий",
      "Сеансовий",
      "Прикладний"
    ],
    "correct_answer": "Прикладний",
    "explanation": "HTTP (HyperText Transfer Protocol) працює на 7-му прикладному рівні моделі OSI, забезпечуючи передачу веб-сторінок.",
    "topic": "7.2.1"
  },
  {
    "id": 104,
    "question": "Який протокол найчастіше використовується для зв'язку IoT пристроїв з низьким енергоспоживанням?",
    "options": [
      "HTTP",
      "FTP",
      "MQTT",
      "SMTP"
    ],
    "correct_answer": "MQTT",
    "explanation": "MQTT (Message Queuing Telemetry Transport) оптимізований для IoT - легкий протокол з мінімальним використанням пропускної здатності.",
    "topic": "7.3.1"
  },
  {
    "id": 105,
    "question": "Яка операційна система відноситься до систем реального часу (RTOS)?",
    "options": [
      "Windows 11",
      "Ubuntu Linux",
      "FreeRTOS",
      "macOS"
    ],
    "correct_answer": "FreeRTOS",
    "explanation": "FreeRTOS - це операційна система реального часу, що гарантує виконання завдань у визначені часові рамки.",
    "topic": "8.1.1"
  },
  {
    "id": 106,
    "question": "Що є основною функцією операційної системи щодо управління процесами?",
    "options": [
      "Створення графічного інтерфейсу",
      "Планування та розподіл процесорного часу",
      "Збереження файлів на диск",
      "Підключення до мережі"
    ],
    "correct_answer": "Планування та розподіл процесорного часу",
    "explanation": "ОС відповідає за планування процесів, розподіл CPU часу між ними та управління їх життєвим циклом.",
    "topic": "8.1.2"
  },
  {
    "id": 107,
    "question": "Що означає відмовостійкість операційної системи?",
    "options": [
      "Здатність працювати без електроживлення",
      "Здатність продовжувати роботу при збоях компонентів",
      "Відсутність помилок в коді",
      "Швидке завантаження системи"
    ],
    "correct_answer": "Здатність продовжувати роботу при збоях компонентів",
    "explanation": "Відмовостійкість - це здатність системи зберігати працездатність при відмові окремих компонентів або виникненні помилок.",
    "topic": "8.1.3"
  },
  {
    "id": 108,
    "question": "Що таке inode в файлових системах Unix/Linux?",
    "options": [
      "Тип файлу",
      "Структура даних з метаінформацією про файл",
      "Розширення файлу",
      "Вміст файлу"
    ],
    "correct_answer": "Структура даних з метаінформацією про файл",
    "explanation": "Inode містить метадані файлу: розмір, власника, права доступу, часові мітки, вказівники на блоки даних.",
    "topic": "8.2.1"
  },
  {
    "id": 109,
    "question": "Яка основна перевага журнальованих файлових систем (ext4, NTFS)?",
    "options": [
      "Вища швидкість запису",
      "Менше використання дискового простору",
      "Швидке відновлення після збоїв",
      "Краще стиснення даних"
    ],
    "correct_answer": "Швидке відновлення після збоїв",
    "explanation": "Журналювання записує зміни перед їх застосуванням, що дозволяє швидко відновити цілісність ФС після збою.",
    "topic": "8.2.2"
  },
  {
    "id": 110,
    "question": "Яка основна відмінність між статичною та динамічною типізацією в мовах програмування?",
    "options": [
      "Швидкість виконання програм",
      "Момент визначення типів змінних",
      "Розмір виконуваних файлів",
      "Підтримка ООП"
    ],
    "correct_answer": "Момент визначення типів змінних",
    "explanation": "При статичній типізації типи визначаються під час компіляції, при динамічній - під час виконання програми.",
    "topic": "9.1.1"
  },
  {
    "id": 111,
    "question": "Що таке 'duck typing' в контексті ООП?",
    "options": [
      "Наслідування від класу Duck",
      "Визначення типу за поведінкою об'єкта",
      "Спеціальний патерн проектування",
      "Метод оптимізації коду"
    ],
    "correct_answer": "Визначення типу за поведінкою об'єкта",
    "explanation": "Duck typing: 'Якщо щось ходить як качка і крякає як качка, то це качка' - тип визначається наявністю методів, а не класом.",
    "topic": "9.1.2"
  },
  {
    "id": 112,
    "question": "Коли використовується відношення 'реалізація' між класами?",
    "options": [
      "При наслідуванні класів",
      "При реалізації інтерфейсу класом",
      "При створенні об'єкта класу",
      "При композиції класів"
    ],
    "correct_answer": "При реалізації інтерфейсу класом",
    "explanation": "Відношення реалізації виникає, коли клас імплементує методи, визначені в інтерфейсі.",
    "topic": "9.1.3"
  },
  {
    "id": 113,
    "question": "Яка ключова перевага об'єктно-орієнтованого програмування над процедурним?",
    "options": [
      "Швидше виконання програм",
      "Менше використання пам'яті",
      "Краща організація коду через інкапсуляцію та модульність",
      "Простіший синтаксис"
    ],
    "correct_answer": "Краща організація коду через інкапсуляцію та модульність",
    "explanation": "ООП дозволяє створювати модульний, легкий для підтримки код через інкапсуляцію даних та поведінки в об'єктах.",
    "topic": "9.1.4"
  },
  {
    "id": 114,
    "question": "Що таке 'чисті функції' в функціональному програмуванні?",
    "options": [
      "Функції без параметрів",
      "Функції без побічних ефектів, що повертають однаковий результат для однакових аргументів",
      "Функції з одним рядком коду",
      "Вбудовані функції мови"
    ],
    "correct_answer": "Функції без побічних ефектів, що повертають однаковий результат для однакових аргументів",
    "explanation": "Чисті функції не змінюють глобальний стан і завжди повертають однаковий результат для однакових вхідних даних.",
    "topic": "9.2.1"
  },
  {
    "id": 115,
    "question": "Що означає SIMD в класифікації Флінна?",
    "options": [
      "Single Instruction, Multiple Data",
      "Simple Instruction, Multiple Devices",
      "Single Interface, Multiple Databases",
      "Synchronized Instruction, Multiple Deployment"
    ],
    "correct_answer": "Single Instruction, Multiple Data",
    "explanation": "SIMD - архітектура, де одна інструкція одночасно виконується над множиною даних (векторні процесори, GPU).",
    "topic": "9.3.1"
  },
  {
    "id": 116,
    "question": "Яка основна різниця між JIT та AOT компіляцією?",
    "options": [
      "JIT швидший за AOT",
      "JIT компілює під час виконання, AOT - заздалегідь",
      "AOT працює тільки для Java",
      "JIT створює менші файли"
    ],
    "correct_answer": "JIT компілює під час виконання, AOT - заздалегідь",
    "explanation": "JIT (Just-In-Time) компілює байт-код в машинний код під час виконання, AOT (Ahead-Of-Time) - до виконання.",
    "topic": "9.4.1"
  },
  {
    "id": 117,
    "question": "Що таке 'інтелектуальний агент' в контексті штучного інтелекту?",
    "options": [
      "Людина, що працює з ШІ",
      "Сутність, що сприймає середовище та діє для досягнення цілей",
      "Спеціальний алгоритм сортування",
      "База даних зі знаннями"
    ],
    "correct_answer": "Сутність, що сприймає середовище та діє для досягнення цілей",
    "explanation": "Інтелектуальний агент - це система, що через сенсори сприймає середовище і через актуатори впливає на нього для досягнення цілей.",
    "topic": "10.1.1"
  },
  {
    "id": 118,
    "question": "Яка основна відмінність між пошуком в ширину (BFS) та в глибину (DFS)?",
    "options": [
      "BFS швидший за DFS",
      "BFS використовує чергу, DFS - стек",
      "DFS знаходить коротший шлях",
      "BFS працює тільки для дерев"
    ],
    "correct_answer": "BFS використовує чергу, DFS - стек",
    "explanation": "BFS обходить вершини по рівнях використовуючи чергу, DFS йде вглиб наскільки можливо використовуючи стек.",
    "topic": "10.2.1"
  },
  {
    "id": 119,
    "question": "Що представляє семантична мережа як модель подання знань?",
    "options": [
      "Таблицю з правилами",
      "Граф з вузлами-поняттями та дугами-відношеннями",
      "Математичні формули",
      "Послідовність команд"
    ],
    "correct_answer": "Граф з вузлами-поняттями та дугами-відношеннями",
    "explanation": "Семантична мережа - це граф, де вузли представляють об'єкти або поняття, а дуги - відношення між ними.",
    "topic": "10.2.2"
  },
  {
    "id": 120,
    "question": "Яка основна відмінність між supervised та unsupervised learning?",
    "options": [
      "Швидкість навчання",
      "Наявність міток у навчальних даних",
      "Розмір моделі",
      "Тип використовуваних алгоритмів"
    ],
    "correct_answer": "Наявність міток у навчальних даних",
    "explanation": "При supervised learning дані містять правильні відповіді (мітки), при unsupervised - модель сама знаходить закономірності.",
    "topic": "10.3.1"
  },
  {
    "id": 121,
    "question": "Для чого використовується валідаційна вибірка в машинному навчанні?",
    "options": [
      "Для навчання моделі",
      "Для фінального тестування",
      "Для налаштування гіперпараметрів та запобігання перенавчанню",
      "Для збільшення даних"
    ],
    "correct_answer": "Для налаштування гіперпараметрів та запобігання перенавчанню",
    "explanation": "Валідаційна вибірка використовується для оцінки моделі під час навчання та вибору оптимальних гіперпараметрів.",
    "topic": "10.3.2"
  },
  {
    "id": 122,
    "question": "Яка функція активації найчастіше використовується в сучасних глибоких нейронних мережах?",
    "options": [
      "Сигмоїдна",
      "Гіперболічний тангенс",
      "ReLU (Rectified Linear Unit)",
      "Лінійна"
    ],
    "correct_answer": "ReLU (Rectified Linear Unit)",
    "explanation": "ReLU (f(x) = max(0,x)) популярна через простоту обчислення та відсутність проблеми зникаючого градієнта.",
    "topic": "10.3.3"
  },
  {
    "id": 123,
    "question": "Який механізм використовується в Transformer архітектурі для обробки послідовностей?",
    "options": [
      "Рекурентні зв'язки",
      "Згорткові шари",
      "Механізм уваги (Attention)",
      "Повнозв'язні шари"
    ],
    "correct_answer": "Механізм уваги (Attention)",
    "explanation": "Transformer використовує self-attention механізм для паралельної обробки всіх елементів послідовності.",
    "topic": "10.3.3"
  },
  {
    "id": 124,
    "question": "Що таке transfer learning в контексті нейронних мереж?",
    "options": [
      "Передача даних між мережами",
      "Використання попередньо навченої моделі для нової задачі",
      "Копіювання архітектури мережі",
      "Паралельне навчання кількох мереж"
    ],
    "correct_answer": "Використання попередньо навченої моделі для нової задачі",
    "explanation": "Transfer learning дозволяє використовувати знання, отримані при розв'язанні однієї задачі, для прискорення навчання на іншій.",
    "topic": "10.3.3"
  },
  {
    "id": 125,
    "question": "Яка проблема виникає при використанні занадто глибоких нейронних мереж з сигмоїдною активацією?",
    "options": [
      "Переповнення пам'яті",
      "Зникаючий градієнт",
      "Надто швидке навчання",
      "Неможливість паралелізації"
    ],
    "correct_answer": "Зникаючий градієнт",
    "explanation": "При зворотному поширенні через багато шарів з сигмоїдною активацією градієнти стають надто малими для ефективного навчання.",
    "topic": "10.3.3"
  },
  {
    "id": 126,
    "question": "Що таке federated learning?",
    "options": [
      "Навчання на федеральних даних",
      "Розподілене навчання без централізації даних",
      "Навчання кількох моделей одночасно",
      "Метод ансамблювання моделей"
    ],
    "correct_answer": "Розподілене навчання без централізації даних",
    "explanation": "Federated learning дозволяє навчати модель на розподілених даних без їх передачі на центральний сервер, зберігаючи приватність.",
    "topic": "10.3.1"
  },
  {
    "id": 127,
    "question": "Який підхід використовується в reinforcement learning?",
    "options": [
      "Навчання на розмічених даних",
      "Кластеризація даних",
      "Навчання через взаємодію з середовищем та отримання винагород",
      "Копіювання поведінки експерта"
    ],
    "correct_answer": "Навчання через взаємодію з середовищем та отримання винагород",
    "explanation": "Reinforcement learning базується на принципі проб та помилок, де агент вчиться максимізувати сумарну винагороду.",
    "topic": "10.3.1"
  },
  {
    "id": 128,
    "question": "Що таке GAN (Generative Adversarial Network)?",
    "options": [
      "Мережа для класифікації зображень",
      "Дві мережі, що змагаються: генератор та дискримінатор",
      "Мережа для обробки тексту",
      "Метод стиснення даних"
    ],
    "correct_answer": "Дві мережі, що змагаються: генератор та дискримінатор",
    "explanation": "GAN складається з генератора, що створює дані, та дискримінатора, що намагається відрізнити згенеровані дані від реальних.",
    "topic": "10.3.3"
  },
  {
    "id": 129,
    "question": "Яка основна проблема виникає при навчанні на незбалансованих даних?",
    "options": [
      "Повільне навчання",
      "Модель схильна передбачати домінуючий клас",
      "Неможливість конвергенції",
      "Переповнення пам'яті"
    ],
    "correct_answer": "Модель схильна передбачати домінуючий клас",
    "explanation": "При великому дисбалансі класів модель може досягти високої точності, просто передбачаючи найчастіший клас.",
    "topic": "10.3.2"
  },
  {
    "id": 130,
    "question": "Що таке batch normalization в нейронних мережах?",
    "options": [
      "Розділення даних на батчі",
      "Нормалізація вхідних даних",
      "Нормалізація активацій між шарами під час навчання",
      "Метод регуляризації ваг"
    ],
    "correct_answer": "Нормалізація активацій між шарами під час навчання",
    "explanation": "Batch normalization нормалізує входи кожного шару, що стабілізує навчання та дозволяє використовувати вищі learning rate.",
    "topic": "10.3.3"
  },
  {
    "id": 131,
    "question": "Який метод використовується для пояснення рішень 'чорної скриньки' моделей машинного навчання?",
    "options": [
      "Gradient descent",
      "LIME або SHAP",
      "Backpropagation",
      "Cross-validation"
    ],
    "correct_answer": "LIME або SHAP",
    "explanation": "LIME (Local Interpretable Model-agnostic Explanations) та SHAP (SHapley Additive exPlanations) пояснюють передбачення складних моделей.",
    "topic": "10.3.1"
  },
  {
    "id": 132,
    "question": "Що таке data augmentation в контексті комп'ютерного зору?",
    "options": [
      "Збільшення розміру зображень",
      "Створення варіацій навчальних зображень через трансформації",
      "Стиснення зображень",
      "Видалення шуму з зображень"
    ],
    "correct_answer": "Створення варіацій навчальних зображень через трансформації",
    "explanation": "Data augmentation створює додаткові навчальні приклади через повороти, зсуви, зміну яскравості тощо.",
    "topic": "10.3.2"
  },
  {
    "id": 133,
    "question": "Яка архітектура нейронної мережі найкраще підходить для обробки послідовностей змінної довжини?",
    "options": [
      "Повнозв'язна мережа",
      "Згорткова мережа",
      "Рекурентна мережа (RNN/LSTM)",
      "Автоенкодер"
    ],
    "correct_answer": "Рекурентна мережа (RNN/LSTM)",
    "explanation": "RNN та їх варіанти (LSTM, GRU) спеціально розроблені для обробки послідовностей з урахуванням часових залежностей.",
    "topic": "10.3.3"
  },
  {
    "id": 134,
    "question": "Що таке fine-tuning в контексті попередньо навчених моделей?",
    "options": [
      "Навчання моделі з нуля",
      "Видалення шарів з моделі",
      "Донавчання моделі на специфічних даних",
      "Оптимізація гіперпараметрів"
    ],
    "correct_answer": "Донавчання моделі на специфічних даних",
    "explanation": "Fine-tuning - це процес адаптації попередньо навченої моделі до конкретної задачі через донавчання на нових даних.",
    "topic": "10.3.2"
  },
  {
    "id": 135,
    "question": "Яка метрика найкраще підходить для оцінки моделі на незбалансованих даних?",
    "options": [
      "Accuracy",
      "F1-score",
      "Mean Squared Error",
      "R-squared"
    ],
    "correct_answer": "F1-score",
    "explanation": "F1-score враховує як precision, так і recall, що робить його стійким до дисбалансу класів на відміну від accuracy.",
    "topic": "10.3.1"
  },
  {
    "id": 136,
    "question": "Що таке dropout в нейронних мережах?",
    "options": [
      "Видалення нейронів з мережі",
      "Техніка регуляризації через випадкове вимкнення нейронів під час навчання",
      "Метод ініціалізації ваг",
      "Спосіб прискорення навчання"
    ],
    "correct_answer": "Техніка регуляризації через випадкове вимкнення нейронів під час навчання",
    "explanation": "Dropout випадково 'вимикає' частину нейронів під час навчання, що запобігає перенавчанню та покращує узагальнення.",
    "topic": "10.3.3"
  },
  {
    "id": 137,
    "question": "Який підхід використовується в few-shot learning?",
    "options": [
      "Навчання на великих датасетах",
      "Навчання на дуже малій кількості прикладів",
      "Навчання без вчителя",
      "Навчання тільки на синтетичних даних"
    ],
    "correct_answer": "Навчання на дуже малій кількості прикладів",
    "explanation": "Few-shot learning спрямований на навчання моделей, які можуть узагальнювати з дуже малої кількості навчальних прикладів.",
    "topic": "10.3.2"
  },
  {
    "id": 138,
    "question": "Що таке adversarial examples в машинному навчанні?",
    "options": [
      "Приклади для навчання GAN",
      "Спеціально створені приклади для обману моделі",
      "Негативні приклади в датасеті",
      "Приклади з помилковими мітками"
    ],
    "correct_answer": "Спеціально створені приклади для обману моделі",
    "explanation": "Adversarial examples - це вхідні дані з невеликими змінами, непомітними для людини, але які змушують модель робити неправильні передбачення.",
    "topic": "10.3.1"
  },
  {
    "id": 139,
    "question": "Яка основна перевага використання ансамблів моделей?",
    "options": [
      "Швидше навчання",
      "Менше використання пам'яті",
      "Підвищення точності та стабільності передбачень",
      "Простіша архітектура"
    ],
    "correct_answer": "Підвищення точності та стабільності передбачень",
    "explanation": "Ансамблі комбінують передбачення кількох моделей, що зазвичай дає кращу точність та зменшує варіативність результатів.",
    "topic": "10.3.1"
  },
  {
    "id": 140,
    "question": "Що таке knowledge distillation в глибокому навчанні?",
    "options": [
      "Видалення зайвих знань з моделі",
      "Передача знань від великої моделі до меншої",
      "Метод стиснення даних",
      "Спосіб візуалізації навченої моделі"
    ],
    "correct_answer": "Передача знань від великої моделі до меншої",
    "explanation": "Knowledge distillation навчає компактну модель (student) наслідувати поведінку більшої, точнішої моделі (teacher).",
    "topic": "10.3.3"
  }
]